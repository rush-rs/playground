(function(){"use strict";let o;const c=new Array(128).fill(void 0);c.push(void 0,null,!0,!1);function h(e){return c[e]}let f=c.length;function W(e){e<132||(c[e]=f,f=e)}function I(e){const n=h(e);return W(e),n}let d=0,u=null;function w(){return(u===null||u.byteLength===0)&&(u=new Uint8Array(o.memory.buffer)),u}const y=new TextEncoder("utf-8"),k=typeof y.encodeInto=="function"?function(e,n){return y.encodeInto(e,n)}:function(e,n){const t=y.encode(e);return n.set(t),{read:e.length,written:t.length}};function m(e,n,t){if(t===void 0){const a=y.encode(e),b=n(a.length);return w().subarray(b,b+a.length).set(a),d=a.length,b}let r=e.length,i=n(r);const _=w();let s=0;for(;s<r;s++){const a=e.charCodeAt(s);if(a>127)break;_[i+s]=a}if(s!==r){s!==0&&(e=e.slice(s)),i=t(i,r,r=s+e.length*3);const a=w().subarray(i+s,i+r),b=k(e,a);s+=b.written}return d=s,i}let l=null;function g(){return(l===null||l.byteLength===0)&&(l=new Int32Array(o.memory.buffer)),l}const p=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});p.decode();function A(e,n){return p.decode(w().subarray(e,e+n))}function R(e){try{const r=o.__wbindgen_add_to_stack_pointer(-16),i=m(e,o.__wbindgen_malloc,o.__wbindgen_realloc),_=d;o.run(r,i,_);var n=g()[r/4+0],t=g()[r/4+1];return A(n,t)}finally{o.__wbindgen_add_to_stack_pointer(16),o.__wbindgen_free(n,t)}}function O(e){f===c.length&&c.push(c.length+1);const n=f;return f=c[n],c[n]=e,n}async function S(e,n){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,n)}catch(r){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}const t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}else{const t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}function T(){const e={};return e.wbg={},e.wbg.__wbg_new_abda76e883ba8a5f=function(){const n=new Error;return O(n)},e.wbg.__wbg_stack_658279fe44541cf6=function(n,t){const r=h(t).stack,i=m(r,o.__wbindgen_malloc,o.__wbindgen_realloc),_=d;g()[n/4+1]=_,g()[n/4+0]=i},e.wbg.__wbg_error_f851667af71bcfc6=function(n,t){try{console.error(A(n,t))}finally{o.__wbindgen_free(n,t)}},e.wbg.__wbindgen_object_drop_ref=function(n){I(n)},e}function E(e,n){return o=e.exports,M.__wbindgen_wasm_module=n,l=null,u=null,o}async function M(e){typeof e>"u"&&(e=new URL("/assets/rush_backend_bg-ed319a42.wasm",self.location));const n=T();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:t,module:r}=await S(await e,n);return E(t,r)}L();async function L(){await M(),postMessage(["ready"]),onmessage=function(e){if(e.data[0]==="run"){let n=R(e.data[1]);postMessage(["finished",n])}}}})();
